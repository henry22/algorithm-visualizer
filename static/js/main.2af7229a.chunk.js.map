{"version":3,"sources":["utility/Util.js","components/Body.js","utility/Sorting.js","components/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["generateRandomArray","length","randomItems","i","randomNumber","Math","floor","random","indexOf","push","id","uid","itemValue","color","springAnimation","type","damping","stiffness","liStyle","marginTop","marginBottom","marginLeft","marginRight","borderRadius","listStyle","fontSize","textAlign","alignItems","display","Body","items","liHeight","window","innerHeight","style","justifyItems","map","item","div","key","animate","scale","layoutTransition","background","IsBeingSwapped","width","height","margin","bubbleSort","results","resultItems","JSON","parse","stringify","isSorted","insertionSort","j","selectionSort","current_index","min_val","min_idx","mergeSort","console","log","unsortedArray","middle","left","slice","right","resultArray","leftIndex","rightIndex","result","concat","merge","quickSort","quickSortHelper","arr","partitionIndex","pivot","pivotValue","partition","Visualizer","useState","speed","setSpeed","numItems","setNumItems","setIsSorted","algoFunction","setAlgoFunction","inputType","setInputType","process","setProcess","setItems","customNumbers","setCustomNumbers","reset","num","setNewItems","resetNumbers","checkSwappedElements","itemsPrev","itemsCurrent","newItems","runAlgorithm","getAlgoFunction","resultItemsWithSwapState","setTimeout","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","variant","Grid","xs","FormControl","component","RadioGroup","row","aria-label","name","value","onChange","e","target","FormControlLabel","control","Radio","label","Container","maxWidth","container","spacing","Slider","newValue","aria-labelledby","valueLabelDisplay","max","justifyContent","TextField","input","split","filter","number","parseInt","placeholder","Button","disabled","onClick","customItems","Number","submit","InputLabelProps","shrink","newSpeed","alert","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","reason","message","action","size","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2af7229a.chunk.js","sourcesContent":["import {uid} from 'react-uid'\n\nexport function generateRandomArray(length) {\n  let randomItems = []\n\n  for(let i = 0; i < length; i++) {\n    const randomNumber = Math.floor(Math.random() * 101)\n\n    if (randomItems.indexOf(randomNumber) === -1) {\n      randomItems.push({ id: uid(Math.random()), itemValue: randomNumber, color: '#2d8ae2' })\n    }\n  }\n  return randomItems\n}\n\nexport const springAnimation = {\n  type: \"spring\",\n  damping: 20,\n  stiffness: 300\n}","import React from 'react';\nimport { motion } from \"framer-motion\";\nimport { springAnimation } from '../utility/Util';\n\nconst liStyle = {\n  marginTop: 8,\n  marginBottom: 8,\n  marginLeft: 4,\n  marginRight: 4,\n  borderRadius: 5,\n  listStyle: 'none',\n  color: 'white',\n  fontSize: '32px',\n  textAlign: 'center',\n  alignItems: 'center',\n  display: 'grid'\n}\n\nexport default function Body({ items }) {\n  let liHeight = Math.floor((window.innerHeight / 2) / 100);\n  let liWidth = 32;\n\n  return (\n    <div style={{ display: 'inline-flex', justifyItems: 'center' }}>\n      {\n        items.map(item =>\n          <motion.div\n            key={item.id}\n            animate={{ scale: [1, 1.2, 1] }}\n            layoutTransition={springAnimation}\n            style={{\n              ...liStyle,\n              background: item.IsBeingSwapped === true ? \"#2bc5bf\" : item.color,\n              width: liWidth,\n              height: liHeight * (item.itemValue + 10)\n            }}>\n            <h6 style={{ margin: 0 }}>{item.itemValue}</h6>\n          </motion.div>\n        )\n      }\n    </div>\n  )\n}\n","export function bubbleSort(items) {\n\tlet results = [];\n\tlet resultItems = JSON.parse(JSON.stringify(items));\n\n\tlet isSorted = false;\n\twhile (isSorted === false) {\n\t\tisSorted = true;\n\n\t\tfor (let i = 0; i < resultItems.length - 1; i++) {\n\t\t\tif (resultItems[i].itemValue > resultItems[i + 1].itemValue) {\n\t\t\t\t[ resultItems[i], resultItems[i + 1] ] = [ resultItems[i + 1], resultItems[i] ];\n\t\t\t\tisSorted = false;\n\n\t\t\t\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\t\t\t}\n\t\t}\n\t}\n\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\treturn results;\n}\n\nexport function insertionSort(items) {\n\tlet results = [];\n\n\tlet resultItems = JSON.parse(JSON.stringify(items));\n\tfor (let i = 1; i < resultItems.length; i++) {\n\t\tlet j = i;\n\t\twhile (j > 0 && resultItems[j].itemValue < resultItems[j - 1].itemValue) {\n\t\t\t[ resultItems[j], resultItems[j - 1] ] = [ resultItems[j - 1], resultItems[j] ];\n\t\t\tj -= 1;\n\t\t\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\t\t}\n\t}\n\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\treturn results;\n}\n\nexport function selectionSort(items) {\n\tlet results = [];\n\n\tlet resultItems = JSON.parse(JSON.stringify(items));\n\n\tlet current_index = 0;\n\twhile (current_index < resultItems.length - 1) {\n\t\tlet min_val = resultItems[current_index].itemValue;\n\t\tlet min_idx = current_index;\n\n\t\tfor (let i = current_index + 1; i < resultItems.length; i++) {\n\t\t\tif (resultItems[i].itemValue < min_val) {\n\t\t\t\tmin_val = resultItems[i].itemValue;\n\t\t\t\tmin_idx = i;\n\t\t\t}\n\t\t}\n\n\t\t[ resultItems[current_index], resultItems[min_idx] ] = [ resultItems[min_idx], resultItems[current_index] ];\n\t\tcurrent_index += 1;\n\t\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\t}\n\n\tresults.push(JSON.parse(JSON.stringify(resultItems)));\n\treturn results;\n}\n\nexport function mergeSort(items) {\n\tconsole.log('merge sort items');\n\tlet results = [];\n\tlet resultItems = JSON.parse(JSON.stringify(items));\n\n\tfunction mergeSort(unsortedArray) {\n\t\tif (unsortedArray.length <= 1) {\n\t\t\treturn unsortedArray;\n\t\t}\n\n\t\tconst middle = Math.floor(unsortedArray.length / 2);\n\t\tconst left = unsortedArray.slice(0, middle);\n\t\tconst right = unsortedArray.slice(middle);\n\n\t\treturn merge(mergeSort(left), mergeSort(right));\n\t}\n\n\tfunction merge(left, right) {\n\t\tlet resultArray = [],\n\t\t\tleftIndex = 0,\n\t\t\trightIndex = 0;\n\n\t\twhile (leftIndex < left.length && rightIndex < right.length) {\n\t\t\tif (left[leftIndex].itemValue < right[rightIndex].itemValue) {\n\t\t\t\tresultArray.push(left[leftIndex]);\n\t\t\t\tleftIndex++;\n\t\t\t} else {\n\t\t\t\tresultArray.push(right[rightIndex]);\n\t\t\t\trightIndex++;\n\t\t\t}\n\t\t}\n\t\tlet result = resultArray.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));\n\t\tresults.push(JSON.parse(JSON.stringify(result)));\n\t\treturn result;\n\t}\n\n\tmergeSort(resultItems);\n\n\treturn results;\n}\n\nexport function quickSort(items) {\n\tlet results = [];\n\tlet resultItems = JSON.parse(JSON.stringify(items));\n\n\tfunction quickSortHelper(arr, left, right) {\n\t\tlet pivot;\n\t\tlet partitionIndex;\n\n\t\tif (left < right) {\n\t\t\tpivot = right;\n\t\t\tpartitionIndex = partition(arr, pivot, left, right);\n\n\t\t\t//sort left and right\n\t\t\tquickSortHelper(arr, left, partitionIndex - 1);\n\t\t\tquickSortHelper(arr, partitionIndex + 1, right);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction partition(arr, pivot, left, right) {\n\t\tlet pivotValue = arr[pivot].itemValue;\n\t\tlet partitionIndex = left;\n\n\t\tfor (let i = left; i < right; i++) {\n\t\t\tif (arr[i].itemValue < pivotValue) {\n\t\t\t\t[ arr[i], arr[partitionIndex] ] = [ arr[partitionIndex], arr[i] ];\n\t\t\t\tpartitionIndex++;\n\t\t\t}\n\t\t\tresults.push(JSON.parse(JSON.stringify(arr)));\n\t\t}\n\t\t[ arr[right], arr[partitionIndex] ] = [ arr[partitionIndex], arr[right] ];\n\t\treturn partitionIndex;\n\t}\n\n\tquickSortHelper(resultItems, 0, resultItems.length - 1);\n\n\tresults.push(results[results.length - 1]);\n\treturn results;\n}\n\nexport function getAlgoFunction(algoFunction) {\n\tif (algoFunction === 'BubbleSort') {\n\t\treturn bubbleSort;\n\t}\n\n\tif (algoFunction === 'InsertionSort') {\n\t\treturn insertionSort;\n\t}\n\n\tif (algoFunction === 'SelectionSort') {\n\t\treturn selectionSort;\n\t}\n\n\tif (algoFunction === 'MergeSort') {\n\t\treturn mergeSort;\n\t}\n\n\tif (algoFunction === 'QuickSort') {\n\t\treturn quickSort;\n\t}\n}\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Slider, Snackbar } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { generateRandomArray } from '../utility/Util';\nimport Body from './Body';\nimport { getAlgoFunction } from '../utility/Sorting';\nimport { uid } from 'react-uid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nexport default function Visualizer() {\n\tconst [ speed, setSpeed ] = useState(1000);\n\tconst [ numItems, setNumItems ] = useState(2);\n\tconst [ isSorted, setIsSorted ] = useState(false);\n\tconst [ algoFunction, setAlgoFunction ] = useState('BubbleSort');\n\tconst [ inputType, setInputType ] = useState('DefaultInput');\n\tconst [ process, setProcess ] = useState(false);\n\tconst [ items, setItems ] = useState(generateRandomArray(numItems));\n\tconst [ customNumbers, setCustomNumbers ] = useState([]);\n\tconst maxItems = 30;\n\n\tfunction changeSpeed(e) {\n\t\tconst newSpeed = e.target.value;\n\t\tif (newSpeed < 0 || newSpeed > 1000) {\n\t\t\talert('Speed should be between 0 and 1000 ms');\n\t\t} else {\n\t\t\tsetSpeed(newSpeed);\n\t\t}\n\t}\n\n\tfunction customInput(e) {\n\t\tlet input = e.target.value.split(' ').filter((number) => parseInt(number));\n\t\tsetCustomNumbers(input);\n\t}\n\n\tfunction submit() {\n\t\tsetItems([]);\n\t\tlet customItems = [];\n\t\tfor (let i = 0; i < customNumbers.length; i++) {\n\t\t\tconst value = customNumbers[i];\n\t\t\tcustomItems.push({\n\t\t\t\tid: uid(Math.random()),\n\t\t\t\titemValue: Number(value),\n\t\t\t\tcolor: '#2d8ae2',\n\t\t\t\tIsBeingSwapped: false\n\t\t\t});\n\t\t}\n\t\tsetItems(customItems);\n\t}\n\n\tfunction reset(num) {\n\t\tsetProcess(false);\n\t\tsetAlgoFunction('BubbleSort');\n\t\tsetIsSorted(false);\n\t\tsetNewItems(num);\n\t}\n\n\tfunction resetNumbers() {\n\t\tsetProcess(false);\n\t\tsetIsSorted(false);\n\t\tsetAlgoFunction(algoFunction);\n\t\tlet randomItems = generateRandomArray(numItems);\n\t\tsetItems(randomItems);\n\t}\n\n\tfunction setNewItems(num) {\n\t\tif (num === numItems) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetNumItems(num);\n\t\tlet randomItems = generateRandomArray(num);\n\t\tsetItems(randomItems);\n\t}\n\n\tfunction checkSwappedElements(itemsPrev, itemsCurrent) {\n\t\tlet newItems = [];\n\t\t// console.log(items, itemsPrev, itemsCurrent)\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\t// console.log(itemsPrev[i], itemsCurrent[i])\n\t\t\tnewItems[i] = itemsCurrent[i];\n\n\t\t\tif (itemsCurrent[i].itemValue !== itemsPrev[i].itemValue) {\n\t\t\t\tnewItems[i].IsBeingSwapped = true;\n\t\t\t}\n\t\t}\n\t\treturn newItems;\n\t}\n\n\tfunction runAlgorithm() {\n\t\tconst result = getAlgoFunction(algoFunction)(items);\n\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tif (i !== result.length - 1) {\n\t\t\t\tlet resultItemsWithSwapState = i === 0 ? checkSwappedElements(items, result[i]) : checkSwappedElements(result[i-1], result[i]);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetItems(resultItemsWithSwapState);\n\t\t\t\t}, i * speed);\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetItems(result[i]);\n\t\t\t\t}, i * speed);\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetIsSorted(true);\n\t\t\t}, result.length * speed);\n\t\t}\n\t}\n\n\tfunction handleClose(reason) {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\">Logo</Typography>\n\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\taria-label=\"algorithm\"\n\t\t\t\t\t\t\t\tname=\"algorithm\"\n\t\t\t\t\t\t\t\tvalue={algoFunction}\n\t\t\t\t\t\t\t\tonChange={(e) => setAlgoFunction(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"BubbleSort\" control={<Radio />} label=\"BubbleSort\" />\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"InsertionSort\" control={<Radio />} label=\"InsertionSort\" />\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"SelectionSort\" control={<Radio />} label=\"SelectionSort\" />\n\t\t\t\t\t\t\t\t{/* <FormControlLabel value=\"MergeSort\" control={<Radio />} label=\"MergeSort\" />\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"QuickSort\" control={<Radio />} label=\"QuickSort\" /> */}\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Container maxWidth=\"lg\" style={{ height: '100vh', display: 'flex', alignItems: 'center' }}>\n\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t{inputType === 'DefaultInput' && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Typography component=\"h4\" variant=\"h4\">\n\t\t\t\t\t\t\t\tNumber of items: {numItems}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{inputType === 'DefaultInput' && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Slider\n\t\t\t\t\t\t\t\tvalue={typeof numItems === 'number' ? numItems : 0}\n\t\t\t\t\t\t\t\tonChange={(e, newValue) => reset(newValue)}\n\t\t\t\t\t\t\t\taria-labelledby=\"input-slider\"\n\t\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\t\t\tmax={maxItems}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\taria-label=\"input-type\"\n\t\t\t\t\t\t\t\tname=\"input-type\"\n\t\t\t\t\t\t\t\tvalue={inputType}\n\t\t\t\t\t\t\t\tonChange={(e) => setInputType(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"CustomInput\" control={<Radio />} label=\"Custom Input\" />\n\t\t\t\t\t\t\t\t<FormControlLabel value=\"DefaultInput\" control={<Radio />} label=\"Default Input\" />\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{inputType === 'CustomInput' && (\n\t\t\t\t\t\t<Grid item xs={12} style={{display: 'flex', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"custom_input\"\n\t\t\t\t\t\t\t\t\tonChange={customInput}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Insert space separated numbers. ex: 23 7 12 90\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: '100%', marginBottom: '20px' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item xs={2}>\n\t\t\t\t\t\t\t\t<Button disabled={process} variant=\"contained\" color=\"primary\" onClick={() => submit()}>\n\t\t\t\t\t\t\t\t\tDone!\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Grid item xs={12} style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" onClick={resetNumbers}>\n\t\t\t\t\t\t\t\tRESET\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<Button disabled={process} variant=\"contained\" color=\"primary\" onClick={() => runAlgorithm()}>\n\t\t\t\t\t\t\t\tSort!\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"standard-number\"\n\t\t\t\t\t\t\t\tlabel=\"Speed (ms)\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={speed}\n\t\t\t\t\t\t\t\tonChange={changeSpeed}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Body items={items} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\t\thorizontal: 'left'\n\t\t\t\t\t}}\n\t\t\t\t\topen={isSorted}\n\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tmessage=\"Sorting completed!\"\n\t\t\t\t\taction={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={resetNumbers}>\n\t\t\t\t\t\t\t\tRESET\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n}\n","import React from 'react';\nimport Visualizer from './components/Visualizer';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Visualizer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}